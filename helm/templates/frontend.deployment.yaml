apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.appName }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.frontend.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.appName }}
    spec:
      containers:
        - name: {{ .Values.frontend.appName }}
          image: "{{ .Values.frontend.registry }}/{{ .Values.frontend.project }}/{{ .Values.frontend.image }}:{{ .Values.frontend.tag }}"
          volumeMounts:
            - name: {{ .Values.frontend.appName }}
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: {{ .Values.frontend.appName }}
          configMap:
            name: {{ .Values.frontend.appName }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.frontend.appName }}
data:
  nginx.conf: |
    server {
      listen 80;
      root /usr/share/nginx/html;
      index index.html;

      location / {
        try_files $uri $uri/ =404;
      }

      location /api {
        rewrite ^/api/login$ /login break;
        proxy_pass http://{{ .Values.backend.appName }}:3000;
      proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.frontend.appName }}
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - protocol: {{ .Values.service.protocol }}
      port: {{ .Values.frontend.port }}
      targetPort: {{ .Values.frontend.targetPort }}
  selector:
    app: {{ .Values.frontend.appName }}